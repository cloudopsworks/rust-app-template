##
# (c) 2021-2025
#     Cloud Ops Works LLC - https://cloudops.works/
#     Find us on:
#       GitHub: https://github.com/cloudopsworks
#       WebSite: https://cloudops.works
#     Distributed Under Apache v2.0 License
#
name: Enable AI Patch Management with Patchwork
on:
  workflow_dispatch:
    inputs:
      run_autofix:
        description: 'Run AutoFix Workflow'
        required: true
        default: true
        type: boolean
      run_dependency_upgrade:
        description: 'Run Dependency Upgrade Workflow'
        required: true
        default: true
        type: boolean
      run_workflow_upgrade:
        description: 'Run Application Worflow version Upgrade'
        required: true
        default: true
        type: boolean

  schedule:
    # Runs once a week on Mondays at 1 am EST
    - cron: '0 6 * * 1'

concurrency: patches-${{ github.repository }}-${{ github.ref }}

permissions:
  contents: write
  packages: read
  statuses: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  autofix:
    name: 'Patchwork AutoFix Execution'
    runs-on: ubuntu-latest
    if: ${{ (inputs.run_autofix || github.event.schedule != '') && vars.PATCHWORK_ENABLED == 'true' }}
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5.9
        with:
          blueprint_ref: 'v5.9'
          source_ref: 'develop'

      - name: Pipeline Configuration
        id: config
        uses: ./bp/ci/config

      - name: Init Patchwork Workflow
        uses: ./bp/ci/ai/patchwork/init
        with:
          #bot_user: ${{ vars.BOT_USER }}
          token: ${{ secrets.BOT_TOKEN }}
          llm_base_url: ${{ vars.HOSTED_LLM_BASE_URL }}
          llm_model: ${{ vars.HOSTED_LLM_MODEL }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}

      - name: Rust Patchwork Workflow
        uses: ./bp/ci/ai/patchwork/autofix/rust
        with:
          #bot_user: ${{ vars.BOT_USER }}
          token: ${{ secrets.BOT_TOKEN }}
          semgrep_token: ${{ secrets.SEMGREP_TOKEN }}

      - name: Run Patchwork AutoFix
        uses: ./bp/ci/ai/patchwork/autofix
        with:
          #bot_user: ${{ vars.BOT_USER }}
          token: ${{ secrets.BOT_TOKEN }}
          patched_token: ${{ secrets.PATCHED_CODES_TOKEN }}
          semgrep_token: ${{ secrets.SEMGREP_TOKEN }}

  dependency_upgrade:
    name: 'Patchwork Dependency Upgrade Execution'
    runs-on: ubuntu-latest
    if: ${{ inputs.run_dependency_upgrade && vars.PATCHWORK_ENABLED == 'true' }}
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5.9
        with:
          blueprint_ref: 'v5.9'
          source_ref: 'develop'

      - name: Pipeline Configuration
        id: config
        uses: ./bp/ci/config

      - name: Init Patchwork Workflow
        uses: ./bp/ci/ai/patchwork/init
        with:
          #bot_user: ${{ vars.BOT_USER }}
          token: ${{ secrets.BOT_TOKEN }}
          llm_base_url: ${{ vars.HOSTED_LLM_BASE_URL }}
          llm_model: ${{ vars.HOSTED_LLM_MODEL }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}

      - name: Init Patchwork Rust
        uses: ./bp/ci/ai/patchwork/dependency-upgrade/rust
        with:
          #bot_user: ${{ vars.BOT_USER }}
          token: ${{ secrets.BOT_TOKEN }}

      - name: Run Patchwork DependencyUpgrade
        uses: ./bp/ci/ai/patchwork/dependency-upgrade
        with:
          #bot_user: ${{ vars.BOT_USER }}
          token: ${{ secrets.BOT_TOKEN }}
          patched_token: ${{ secrets.PATCHED_CODES_TOKEN }}
          libraries_io_key: ${{ secrets.LIBRARIES_IO_API_KEY }}

  workflow_upgrade:
    name: "Workflow Version Baseline Upgrade"
    runs-on: ubuntu-latest
    if: ${{ inputs.run_workflow_upgrade && vars.PATCHWORK_ENABLED == 'true' }}
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5.9
        with:
          blueprint_ref: 'v5.9'
          source_ref: 'develop'

      - name: Pipeline Configuration
        id: config
        uses: ./bp/ci/config

      - name: Workflow Upgrade
        id: upgrade
        uses: ./bp/ci/ai/wf-upgrade
        with:
          token: ${{ secrets.BOT_TOKEN }}
          bot_user: ${{ vars.BOT_USER }}
          bot_email: ${{ vars.BOT_EMAIL }}
          patched_token: ${{ secrets.PATCHED_CODES_TOKEN }}
