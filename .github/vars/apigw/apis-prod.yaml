environment: prod
apigw_definitions:
  - name: test
    version: v2
    mapping: test-apis/api/2.0
    domain_name: apigw.sample.com
    file_name: test
    stage_variables:  # comment out if not needed
      - name: api_variable
        value: api_value
aws:
  stage: production
  stage_only: false
  #http_api: true # uncomment if using HTTP APIs
  #endpoint_type: REGIONAL
  #vpc_endpoint_ids:
  # - vpce-1234567890abcdef0
  # - vpce-1234567890abcdef1
  #disable_execute_api_endpoint: false
  #minimum_compression_size: null
  #xray_enabled: true
  #cache_cluster_enabled: true
  #cache_cluster_size: 0.5
  #vpc_link_name: test-link # DEPRECATED
  rest_vpc_link_name: test-link # use this for REST APIs
  #http_vpc_link:
  #  id: VPC_LINK_ID # use this for HTTP APIs
  #  server_name: test.cloudopsworks.co
  #  type: lb | cloudmap
  #  lb:
  #    name: test-elb
  #    listener_port: 80
  #fail_on_warnings: false # uncomment to disable fail on warnings
  #log_location: /aws/apigateway
  #log_retention_days: 30
  #settings:
  #  metrics_enabled: true | false
  #  logging_level: OFF | ERROR | INFO
  #  data_trace_enabled: true | false
  #  throttling_burst_limit: -1 | 10000
  #  throttling_rate_limit: -1 | 5000
  #  caching_enabled: true | false
  #  cache_ttl_in_seconds: 300
  #  cache_data_encrypted: true | false
  #  require_authorization_for_cache_control: true | false
  #  unauthorized_cache_control_header_strategy: FAIL_WITH_403 | SUCCEED_WITH_RESPONSE_HEADER | SUCCEED_WITHOUT_RESPONSE_HEADER
  publish_bucket:
    enabled: false
    name: test-apigw-backup
    prefix_path: test
  stage_variables:
    - name: url
      value: test-api.sample.com
  #lambda_options:
  #  format_version: "1.0" # Optional, defaults to "2.0"
  #  responses: # (Optional)
  #    default:
  #      statusCode: "200"
  #  pass_through_behavior: when_no_match | when_no_templates | never # defaults to when_no_match
  #  content_handling: CONVERT_TO_TEXT | CONVERT_TO_BINARY # defaults to CONVERT_TO_TEXT
  authorizers:
    - name: Lambda-Auth
      #scheme:
      #  name: Authorization
      #  in: header
      #  type: apiKey
      #  authtype: custom
      authtype: lambda
      #result_ttl_seconds: 10
      #identity_source: method.request.header.Authorization
      #type: request
      lambda:
        function: lambda-auth-prod
        exec_role: lambda-auth-prod-lambda-exec-role
